<UserControl x:Class="VSXMusic.MusicPlayer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignWidth="330">
    <UserControl.Resources>
        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#202020" Offset="0.0"/>
            <GradientStop Color="#444444" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#909090" Offset="0.0"/>
            <GradientStop Color="#303030" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="GlyphBrush" Color="#8DCEDB" />
        <LinearGradientBrush x:Key="HoverBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#404040" Offset="0.0"/>
            <GradientStop Color="#606060" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#202020" Offset="0.0"/>
            <GradientStop Color="#404040" Offset="0.1"/>
            <GradientStop Color="#707070" Offset="0.9"/>
            <GradientStop Color="#808080" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ForegroundBrush" Color="#C0C0C0" />
        <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#505050" Offset="0"/>
            <GradientStop Color="#303030" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="OpenHeaderBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#C0C0C0" Offset="0.0"/>
            <GradientStop Color="#808080" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="GroupBackgroundBrush" Color="#585858"/>
        <SolidColorBrush x:Key="OpenGroupBorderBrush" Color="#808080"/>
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#404040" />
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#606060" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#808080" />

        <!-- Expander toogle button template -->
        <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
            <Border
                Name="Border"
                CornerRadius="20"
                Margin="2,4" 
                Background="Transparent"
                BorderBrush="{StaticResource NormalBorderBrush}"
                BorderThickness="1">
                <Path
                    Name="Arrow"
                    Fill="{StaticResource GlyphBrush}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background"
                  Value="{StaticResource HoverBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="Border" Property="Background"
                  Value="{StaticResource PressedBrush}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="Arrow" Property="Data"
                  Value="M 0 4 L 4 0 L 8 4 Z" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background"
                  Value="{StaticResource DisabledBackgroundBrush}" />
                    <Setter TargetName="Border" Property="BorderBrush"
                  Value="{StaticResource DisabledBorderBrush}" />
                    <Setter Property="Foreground"
                  Value="{StaticResource DisabledForegroundBrush}"/>
                    <Setter TargetName="Arrow" Property="Fill"
                  Value="{StaticResource DisabledForegroundBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Expander style -->
        <Style TargetType="Expander">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Name="ContentRow" Height="0"/>
                            </Grid.RowDefinitions>
                            <Border 
                                    Name="Border" 
                                    Grid.Row="0" 
                                    Background="{StaticResource HeaderBrush}"
                                    BorderBrush="{StaticResource NormalBorderBrush}"
                                    BorderThickness="1" 
                                    CornerRadius="4,4,0,0" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton
                                            Grid.Column="1"
                                            IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,
                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                            OverridesDefaultStyle="True" 
                                            Template="{StaticResource ExpanderToggleButton}" 
                                            Background="{StaticResource NormalBrush}"
                                            Focusable="False" 
                                            Cursor="Arrow" />
                                    <ContentPresenter 
                                            Grid.Column="0"
                                            Margin="4" 
                                            ContentSource="Header" 
                                            RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <Border 
                                    Name="Content" 
                                    Grid.Row="1" 
                                    Background="{StaticResource GroupBackgroundBrush}"
                                    BorderBrush="{StaticResource OpenGroupBorderBrush}" 
                                    BorderThickness="1,0,1,1" 
                                    CornerRadius="0,0,4,4" >
                                <ContentPresenter Margin="4" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentRow" Property="Height"
                                        Value="{Binding ElementName=Content,Path=DesiredHeight}" />
                                <Setter TargetName="Border" Property="BorderBrush"
                                        Value="{StaticResource OpenHeaderBorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{StaticResource DisabledBorderBrush}" />
                                <Setter Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle 
                                SnapsToDevicePixels="true" 
                                Margin="0" 
                                Stroke="Black" 
                                StrokeDashArray="1 2" 
                                StrokeThickness="1"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackgroundFill" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="#FFE3E5F0" Offset="0.5"/>
            <GradientStop Color="#FFC6C5D7" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ExpanderShadowFill" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.5"/>
            <GradientStop Color="#30111111" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid SnapsToDevicePixels="False" Background="Transparent">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse HorizontalAlignment="Center" x:Name="circle" VerticalAlignment="Center" Width="19" Height="19" Fill="{DynamicResource ButtonNormalBackgroundFill}" Stroke="DarkGray"/>
                                    <Ellipse Visibility="Hidden" HorizontalAlignment="Center" x:Name="shadow" VerticalAlignment="Center" Width="17" Height="17" Fill="{DynamicResource ExpanderShadowFill}"/>
                                    <Path SnapsToDevicePixels="false" HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" Stroke="#666" StrokeThickness="2" Data="M 1,1.5  L 4.5,5  L 8,1.5"/>
                                </Grid>
                                <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#666"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                                <Setter Property="Visibility" TargetName="shadow" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Timeline1" AccelerationRatio="0.4">
                                <DoubleAnimationUsingKeyFrames 
                                    BeginTime="00:00:00" 
                                    Duration="00:00:0.25" 
                                    Storyboard.TargetName="ExpandSite" 
                                    Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:0.25" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Timeline2" AccelerationRatio="0.4">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                                               Duration="00:00:00.45" 
                                                               Storyboard.TargetName="ExpandSite" 
                                                               Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:0.45" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border SnapsToDevicePixels="true"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="3">
                            <DockPanel>
                                <ToggleButton FontFamily="{TemplateBinding FontFamily}" 
                                              FontSize="{TemplateBinding FontSize}" 
                                              FontStretch="{TemplateBinding FontStretch}" 
                                              FontStyle="{TemplateBinding FontStyle}" 
                                              FontWeight="{TemplateBinding FontWeight}" 
                                              Foreground="{TemplateBinding Foreground}" 
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Padding="{TemplateBinding Padding}" 
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" 
                                              Margin="1" MinHeight="0" 
                                              MinWidth="0" x:Name="HeaderSite" 
                                              Style="{StaticResource ExpanderRightHeaderStyle}" 
                                              Content="{TemplateBinding Header}" 
                                              ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                              DockPanel.Dock="Right"
                                              Focusable="False" 
                                              Cursor="Arrow"
                                              />
                                <ContentPresenter Focusable="false"                                                   Visibility="Visible"                                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"                                                   Margin="{TemplateBinding Padding}"                                                   x:Name="ExpandSite" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  DockPanel.Dock="Bottom">
                                    <ContentPresenter.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource Timeline2}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--<Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                            </Trigger>-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Expander ExpandDirection="Left" Style="{DynamicResource ExpanderStyle1}" x:Name="expMain" IsExpanded="True">
        <Grid Name="Grid" Width="300">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="OpacityMask" Value="Black" />
                    <Setter Property="SnapsToDevicePixels" Value="False" />
                    <Setter Property="Visibility" Value="Visible" />
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Height" Value="Auto" />
                </Style>
            </Grid.Style>
            <Grid.BitmapEffect>
                <DropShadowBitmapEffect />
            </Grid.BitmapEffect>
            <Rectangle Name="grid">
                <Rectangle.Style>
                    <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Opacity" Value="1" />
                        <Setter Property="RadiusX" Value="9" />
                        <Setter Property="RadiusY" Value="9" />
                        <Setter Property="Fill" Value="SteelBlue" />
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="VerticalAlignment" Value="Stretch" />
                    </Style>
                </Rectangle.Style>
            </Rectangle>
            <Rectangle>
                <Rectangle.Style>
                    <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Margin" Value="2,2,2,2" />
                        <Setter Property="RadiusX" Value="6" />
                        <Setter Property="RadiusY" Value="6" />
                        <Setter Property="Opacity" Value="1" />
                        <Setter Property="Height" Value="25" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="VerticalAlignment" Value="Top" />
                    </Style>
                </Rectangle.Style>
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#ccffffff" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle Name="use">
                <Rectangle.Style>
                    <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Margin" Value="1,1,1,1" />
                        <Setter Property="RadiusX" Value="6" />
                        <Setter Property="RadiusY" Value="6" />
                        <Setter Property="Opacity" Value="1" />
                        <Setter Property="Height" Value="25" />
                        <Setter Property="Stroke" Value="Transparent" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="VerticalAlignment" Value="Bottom" />
                    </Style>
                </Rectangle.Style>
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="SteelBlue" Offset="0"/>
                        <GradientStop Color="#285a8c" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="当前频道：" />
                        <TextBlock Text="{Binding Player.CurrentChannel.Name}" d:DataContext="当前频道" Foreground="Yellow" />
                    </StackPanel>
                    <Button Content="换台" Cursor="Arrow" Grid.Column="1" Margin="5"/>
                </Grid>

                <Expander x:Name="expCodeInfo" ExpandDirection="Down" Header="歌曲信息" IsExpanded="True">
                    <StackPanel>
                        <Image Source="{Binding Player.CurrentSong.Picture}" Width="290" Height="290"/>
                        <TextBlock Text="{Binding Player.CurrentSong.Title}" FontSize="18" FontWeight="Bold" Foreground="LightYellow"/>
                        <TextBlock Text="{Binding Player.CurrentSong.AlbumTitle}" Foreground="LightYellow" />
                    </StackPanel>
                </Expander>
            </StackPanel>
        </Grid>

        
    </Expander>

    <!--<StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Margin="10">
                <TextBlock Text="当前频道：" />
                <TextBlock Text="{Binding Player.CurrentChannel.Name}" d:DataContext="当前频道" />
            </StackPanel>
            <Button Content="换台" Cursor="Arrow" Grid.Column="1"/>
        </Grid>

        <Expander x:Name="expCodeInfo" ExpandDirection="Down" Header="歌曲信息">
            <StackPanel>
                <Image Source="{Binding Player.CurrentSong.Picture}" />
                <TextBlock Text="{Binding Player.CurrentSong.Title}" FontSize="28" FontWeight="Bold" />
                <TextBlock Text="{Binding Player.CurrentSong.AlbumTitle}" Foreground="Cyan" />
            </StackPanel>
        </Expander>
    </StackPanel>-->
</UserControl>
